[
  {
    "ContainingType": "API.Controllers.Activities.ActivityController",
    "Method": "CancelActivity",
    "RelativePath": "api/Activity/CancelActivity",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ActivityId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.Activities.ActivityController",
    "Method": "CreateActivity",
    "RelativePath": "api/Activity/CreateActivity",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "activity",
        "Type": "Application.Activity.DTO.CreateActivityRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.Activities.ActivityController",
    "Method": "DeleteActivityById",
    "RelativePath": "api/Activity/DeleteActivityById",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.Activities.ActivityController",
    "Method": "GetActivities",
    "RelativePath": "api/Activity/GetActivities",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Application.Activity.DTO.ActivityDto, Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.Activities.ActivityController",
    "Method": "GetActivityById",
    "RelativePath": "api/Activity/GetActivityByID",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Application.Activity.DTO.ActivityDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.Activities.ActivityController",
    "Method": "UpdateActivity",
    "RelativePath": "api/Activity/UpdateActivity",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Application.Activity.DTO.UpdateActivityRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.Login.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Application.Authentication.DTO.LoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.Migrations.MigrationController",
    "Method": "MigrateUp",
    "RelativePath": "api/Migration/MigrateUp",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.PhotosController.PhotosController",
    "Method": "UploadPhoto",
    "RelativePath": "api/Photos",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.Users.UserController",
    "Method": "CreateUser",
    "RelativePath": "api/User/CreateUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "Application.Users.DTO.CreateUserRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.Users.UserController",
    "Method": "GetCurrentUser",
    "RelativePath": "api/User/GetLoggedInUserDetails",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.LoggedInUserProfile",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[API.WeatherForecast, API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]